/* src/sidebar/webview/style.css */

:root {
	/* Define common spacings based on VS Code variables if possible, or sensible defaults */
	--container-padding: 10px;
	--element-spacing: 8px;
	--message-padding: 8px 12px; /* Adjusted padding */
	--border-radius: 4px; /* Slightly more rounded */
	--input-height: 28px; /* Slightly taller inputs/buttons */
	--icon-button-size: 28px; /* Square icon buttons */
	--border-color: var(--vscode-contrastBorder, #44444433); /* Softer border */

	/* Copy button specific variables */
	--copy-button-size: 24px; /* Smaller size for copy button */
	--copy-button-padding: 4px; /* Padding inside the button */
	--copy-button-bg: rgba(128, 128, 128, 0.1); /* Subtle background */
	--copy-button-border: 1px solid rgba(128, 128, 128, 0.2); /* Subtle border */
	--copy-button-color: var(--vscode-icon-foreground); /* Icon color */
	--copy-button-hover-bg: var(
		--vscode-toolbar-hoverBackground
	); /* Hover background from theme */
	--copy-button-hover-border: 1px solid var(--vscode-focusBorder); /* Highlight border on hover */
	--copy-button-active-bg: rgba(128, 128, 128, 0.3); /* Active background */
}

/* --- Base Styles --- */
body {
	font-family: var(
		--vscode-font-family,
		-apple-system,
		BlinkMacSystemFont,
		"Segoe UI",
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		"Apple Color Emoji",
		"Segoe UI Emoji",
		"Segoe UI Symbol"
	);
	font-size: var(--vscode-font-size);
	padding: 0 var(--container-padding) var(--container-padding)
		var(--container-padding);
	color: var(--vscode-editor-foreground);
	background-color: var(--vscode-sideBar-background);
	display: flex;
	flex-direction: column;
	height: 100vh; /* Ensure body takes full height */
	box-sizing: border-box;
	overflow-y: auto; /* The body should scroll */
}

/* --- Headers --- */
h1,
h2 {
	color: var(--vscode-sideBar-titleForeground);
	font-weight: 600;
	margin: 0;
	padding-bottom: 5px;
	border-bottom: 1px solid var(--border-color);
}
h1 {
	font-size: 1.2em;
	padding: 0; /* Remove default padding */
}
h2 {
	font-size: 1.05em;
	margin-top: calc(var(--container-padding) * 1.5);
	margin-bottom: var(--element-spacing);
}

/* --- Chat Controls (Top Bar) --- */
.chat-controls {
	display: flex;
	justify-content: end;
	align-items: center;
	padding: var(--element-spacing) 0;
	border-bottom: 1px solid var(--border-color);
	flex-shrink: 0;
	min-height: 35px;
}
.chat-controls h1 {
	border-bottom: none;
	flex-grow: 1;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}
.chat-controls .button-group {
	display: flex;
	gap: 4px; /* Space between icon buttons */
}
.chat-controls .button-group button {
	padding: 0;
	width: var(--icon-button-size);
	height: var(--icon-button-size);
	background-color: transparent; /* Default transparent background */
	border: 1px solid transparent;
	color: var(--vscode-icon-foreground); /* Default icon color */
	border-radius: var(--border-radius);
	cursor: pointer;
	transition: background-color 0.1s ease-in-out, color 0.1s ease-in-out,
		border-color 0.1s ease-in-out;
	display: inline-flex;
	align-items: center;
	justify-content: center;
}
.chat-controls .button-group button:hover {
	background-color: var(--vscode-toolbar-hoverBackground);
	color: var(--vscode-button-hoverForeground);
}
.chat-controls .button-group button:disabled {
	background-color: transparent;
	opacity: 0.5;
	cursor: not-allowed;
}
/* Ensure icons inside buttons are styled correctly */
.chat-controls .button-group button .fa-icon {
	font-size: 0.9em;
	vertical-align: middle;
}

/* Specific styling for Save, Load, Clear buttons */
#save-chat-button,
#load-chat-button,
#clear-chat-button {
	background-color: var(--vscode-input-background); /* Dark background */
	border-color: var(--border-color); /* Add a subtle border */
	color: var(--vscode-button-secondaryForeground); /* Ensure contrast */
}

/* Hover effect for Save, Load, Clear buttons */
#save-chat-button:hover,
#load-chat-button:hover,
#clear-chat-button:hover {
	background-color: var(--vscode-button-secondaryHoverBackground);
	border-color: var(--vscode-focusBorder); /* Highlight border on hover */
	color: var(--vscode-button-hoverForeground); /* Change icon color on hover */
}

/* Disabled state for Save, Load, Clear buttons */
#save-chat-button:disabled,
#load-chat-button:disabled,
#clear-chat-button:disabled {
	background-color: var(--vscode-input-background); /* Keep dark background */
	border-color: var(--border-color);
	color: var(--vscode-button-secondaryForeground);
	opacity: 0.5;
	cursor: not-allowed;
}

/* --- Chat Area Wrapper (New Rule) --- */
#chat-area-wrapper {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
}

/* --- Chat Container --- */
#chat-container {
	flex-grow: 1;
	overflow-y: auto;
	padding: var(--element-spacing);
	margin: var(--element-spacing) 0;
	border-radius: var(--border-radius);
	display: flex;
	flex-direction: column;
	gap: var(--element-spacing); /* Space between messages */
	min-height: 415px;
	max-height: 415px;
}

/* --- Empty Chat Placeholder --- */
#empty-chat-placeholder {
	display: flex;
	position: relative;
	flex-direction: column; /* For vertical stacking of image and text */
	justify-content: center; /* Center content vertically */
	align-items: center; /* Center content horizontally */
	text-align: center; /* Center text within its own line */
	padding: var(--element-spacing); /* Match chat container padding */
	margin: var(--element-spacing) 0; /* Match chat container margin */
	background-color: var(
		--vscode-editorWidget-background
	); /* Match chat container background */
	border-radius: var(--border-radius); /* Match chat container border radius */
	flex-grow: 1; /* Allow it to take up available space, like chat-container */
	min-height: 415px;
}

.empty-chat-logo {
	width: 100px; /* Example size */
	height: auto; /* Maintain aspect ratio */
	opacity: 0.5; /* Subtle appearance */
	filter: grayscale(100%); /* Make it monochrome to fit theme */
}

.empty-chat-text {
	font-size: 1.1em;
	color: var(--vscode-descriptionForeground); /* A subtle text color */
	max-width: 80%; /* Prevent text from stretching too wide */
	line-height: 1.5;
}

/* --- Chat Messages --- */
.message {
	padding: var(--message-padding);
	border-radius: var(--border-radius);
	word-wrap: break-word;
	line-height: 1.5;
	max-width: 95%; /* Keep slightly off edge */
	position: relative; /* Needed for absolute positioning of children like .copy-button */
	border: 1px solid transparent; /* Base border */
	box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05); /* Subtle shadow */
}
.message > strong {
	/* Sender label */
	display: block; /* Ensure the sender label (e.g., "User:", "Model:") takes its own line */
	margin-bottom: 4px;
	font-weight: 600;
	font-size: 0.9em;
	opacity: 0.8;
}
.user-message {
	background-color: var(--vscode-list-activeSelectionBackground);
	color: var(--vscode-list-activeSelectionForeground);
	align-self: flex-end;
	margin-left: auto;
	min-height: fit-content;
	border-color: var(--vscode-list-activeSelectionBackground);
	overflow-x: auto; /* Allow horizontal scrolling for wide content like tables or code blocks */
}
.user-message strong {
	color: var(--vscode-list-activeSelectionForeground);
}
.ai-message {
	background-color: transparent;
	border: 1px solid var(--border-color);
	align-self: flex-start;
	margin-right: auto;
	min-height: fit-content;
	overflow-x: auto; /* Allow horizontal scrolling for wide content like tables or code blocks */
	position: relative; /* Ensure .copy-button is positioned relative to this */
}
/* Specific styling for AI messages that are error messages */
.ai-message.error-message {
	background-color: var(--vscode-inputValidation-errorBackground);
	color: var(--vscode-errorForeground);
	border-color: var(--vscode-inputValidation-errorBorder);
	border-left-width: 4px;
	padding-left: calc(
		var(--message-padding) * 1.2
	); /* Adjust padding due to left border */
}
.ai-message.error-message strong {
	color: var(--vscode-errorForeground);
}

/* --- Copy Button --- */
/* Style for the copy button positioned in the top-right corner of .ai-message */
.copy-button {
	position: absolute;
	bottom: calc(
		var(--copy-button-padding)
	); /* Position from the top, using padding variable */
	right: calc(
		var(--copy-button-padding)
	); /* Position from the right, using padding variable */
	padding: var(--copy-button-padding); /* Padding inside the button */
	width: var(--copy-button-size); /* Fixed width */
	height: var(--copy-button-size); /* Fixed height */
	background-color: var(--copy-button-bg); /* Subtle background */
	border: var(--copy-button-border); /* Subtle border */
	color: var(--copy-button-color); /* Icon color */
	border-radius: var(--border-radius); /* Match parent border radius */
	cursor: pointer;
	display: inline-flex; /* Use flexbox to center icon */
	align-items: center; /* Vertically center icon */
	justify-content: center;
	/* MODIFIED: Changed opacity transition duration from 0.1s to 0.3s */
	transition: background-color 0.1s ease-in-out, border-color 0.1s ease-in-out,
		opacity 0.3s ease-in-out; /* Smooth transitions, includes opacity */
	user-select: none; /* Prevent text selection interference */
	font-size: 0.8em; /* Make icon slightly smaller if needed */
	/* Initially hidden */
	opacity: 0; /* Changed opacity to 0 */
	pointer-events: none; /* Added pointer-events: none */
}

/* Hover state for the copy button when hovering over the AI message */
.ai-message:hover .copy-button {
	opacity: 1; /* Fully opaque on hover */
	pointer-events: auto; /* Allow clicks on hover */
}

/* Hover state for the copy button itself (when it's already visible) */
/* This applies *after* the .ai-message:hover rule makes it visible */
.copy-button:hover {
	background-color: var(--copy-button-hover-bg);
	border-color: var(--copy-button-hover-border);
	/* Opacity is already 1 from the parent hover, no need to set again */
}

/* Active state for the copy button (while clicked) */
.copy-button:active {
	background-color: var(--copy-button-active-bg);
	border-color: var(--vscode-focusBorder); /* Highlight border on click */
	opacity: 1; /* Ensure opacity remains 1 */
}

/* Style for the icon inside the copy button */
.copy-button .fa-icon {
	font-size: 1em; /* Icon size relative to button font size */
}

/* --- System / Loading / Error Messages --- */
.system-message,
.loading-message {
	color: var(--vscode-focusBorder);
	font-style: italic;
	text-align: center;
	background: none;
	padding: 5px 0;
	margin: var(--element-spacing) auto;
	align-self: center;
	width: 90%;
	box-shadow: none;
	border: none;
}
.loading-message {
	font-weight: 500;
}

/* --- Markdown Content within Messages --- */
/* General styling for markdown rendered elements to ensure they fit well within messages */

/* Headings */
#chat-container .message h1,
#chat-container .message h2,
#chat-container .message h3,
#chat-container .message h4, /* Added h4, h5, h6 for completeness */
#chat-container .message h5,
#chat-container .message h6 {
	font-weight: 600;
	margin-top: 1em;
	margin-bottom: 0.5em;
	line-height: 1.3;
	color: inherit; /* Inherit color from parent message */
	border-bottom: none; /* Override global header style */
	padding-bottom: 0; /* Override global header style */
	white-space: normal; /* Ensure headings wrap and don't inherit pre-like behavior */
}
#chat-container .message h1 {
	font-size: 1.1em; /* Slightly larger than body */
	border-bottom: 1px solid
		var(--vscode-editorWidget-border, var(--border-color)); /* Add a subtle separator for top-level headings */
	padding-bottom: 0.3em;
}
#chat-container .message h2 {
	font-size: 1.05em; /* Slightly larger than body */
}
#chat-container .message h3 {
	font-size: 1em; /* Same size as body, but bold */
}
#chat-container .message h4 {
	font-size: 0.95em;
	font-weight: 600;
}
#chat-container .message h5 {
	font-size: 0.9em;
	font-weight: 600;
}
#chat-container .message h6 {
	font-size: 0.85em;
	font-weight: 600;
	color: var(
		--vscode-descriptionForeground,
		inherit
	); /* Subtler color for h6 */
}

/* Remove top margin if heading is the very first element in the message content */
#chat-container .message *:first-child > h1,
#chat-container .message *:first-child > h2,
#chat-container .message *:first-child > h3,
#chat-container .message *:first-child > h4,
#chat-container .message *:first-child > h5,
#chat-container .message *:first-child > h6 {
	margin-top: 0;
}

/* Paragraphs */
#chat-container .message p {
	white-space: normal; /* Ensure paragraphs wrap */
	word-wrap: break-word; /* Allow wrapping within paragraphs */
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}
#chat-container .message p:first-child {
	margin-top: 0; /* Remove top margin for first paragraph */
}
#chat-container .message p:last-child {
	margin-bottom: 0; /* Remove bottom margin for last paragraph */
}

/* Lists (ul, ol, li) */
#chat-container .message ul,
#chat-container .message ol {
	margin-top: 0.5em;
	margin-bottom: 0.8em;
	padding-left: 2em; /* Standard list indentation */
	white-space: normal; /* Ensure lists wrap */
	list-style-position: outside; /* Place markers outside the text flow */
}
#chat-container .message ul {
	list-style-type: disc; /* Standard bullet points */
}
#chat-container .message ol {
	list-style-type: decimal; /* Standard numbering */
}
#chat-container .message li {
	margin-bottom: 0.3em; /* Spacing between list items */
}
#chat-container .message li::marker {
	/* Style list markers to match text color, if needed and supported */
	color: var(--vscode-editor-foreground);
}
/* Nested lists */
#chat-container .message ul ul,
#chat-container .message ul ol,
#chat-container .message ol ol,
#chat-container .message ol ul {
	margin-top: 0.3em;
	margin-bottom: 0.3em;
}
#chat-container .message ul ul {
	list-style-type: circle;
}
#chat-container .message ul ul ul {
	list-style-type: square;
}

/* Blockquotes */
#chat-container .message blockquote {
	margin: 0.8em 0;
	padding: 0.4em 1em;
	border-left: 3px solid var(--vscode-focusBorder, #007fd4); /* Use focus border color for highlight */
	background-color: rgba(
		128,
		128,
		128,
		0.1
	); /* Subtle background, theme-agnostic */
	color: var(
		--vscode-descriptionForeground,
		inherit
	); /* Use description color or inherit */
	white-space: normal; /* Ensure blockquotes wrap */
}
/* Adjust spacing for paragraphs within blockquotes */
#chat-container .message blockquote p {
	margin-bottom: 0.3em;
}
#chat-container .message blockquote p:last-child {
	margin-bottom: 0;
}

/* Code Blocks (pre, code) */
/* Styling for preformatted text blocks, typically used for code */
.message pre {
	background-color: var(
		--vscode-textCodeBlock-background,
		rgba(0, 0, 0, 0.1)
	); /* VSCode var for code block bg */
	padding: 10px;
	border-radius: var(--border-radius);
	overflow-x: auto; /* Allow horizontal scrolling for long lines of code */
	margin-top: 0.8em;
	margin-bottom: 0.8em;
	border: 1px solid var(--vscode-editorWidget-border, var(--border-color)); /* Subtle border */
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05); /* Subtle inset shadow */
	white-space: pre; /* Preserve whitespace and line breaks */
}
/* General styling for code elements (both inline and block) */
.message code {
	font-family: var(
		--vscode-editor-font-family,
		"Courier New",
		Courier,
		monospace
	); /* VSCode editor font */
	font-size: 0.95em; /* Slightly smaller font for code */
	word-break: normal; /* Prevent breaking in middle of code tokens */
}
/* Specific styling for code inside pre blocks (markdown-it typically uses <pre><code class="language-..."></code></pre>) */
.message pre code {
	padding: 0; /* Remove padding, as 'pre' element handles it */
	background: none; /* Transparent background, 'pre' has the background color */
	color: var(
		--vscode-editor-foreground
	); /* Use editor foreground color for text */
	border-radius: 0; /* No border radius for the code element itself */
	box-shadow: none; /* No shadow for the code element itself */
	border: none; /* No border for the code element itself */
	white-space: pre; /* Ensure preformatting is respected, inheriting from pre */
	/* Syntax highlighting classes like .language-javascript will be added by markdown-it.
       VS Code's theming might apply styles to these. If not, text remains plain. */
}
/* Inline code styling (code not inside a pre block) */
.message :not(pre) > code {
	background-color: var(
		--vscode-textCodeBlock-background,
		rgba(0, 0, 0, 0.07)
	); /* Subtle background for inline code */
	padding: 0.2em 0.4em;
	border-radius: var(--border-radius);
	font-size: 0.9em; /* Slightly smaller for inline code */
	border: 1px solid var(--vscode-editorWidget-border, var(--border-color));
	white-space: nowrap; /* Prevent inline code from wrapping if possible */
}

/* Horizontal Rules */
#chat-container .message hr {
	border: 0;
	border-top: 1px solid var(--vscode-editorWidget-border, var(--border-color)); /* A subtle line */
	margin: 1.5em 0; /* Provide ample spacing around HR */
}

/* Links (<a> tags) */
#chat-container .message a {
	color: var(--vscode-textLink-foreground); /* Standard VS Code link color */
	text-decoration: underline;
	white-space: normal; /* Allow links to wrap if they are long */
}
#chat-container .message a:hover {
	color: var(
		--vscode-textLink-activeForeground
	); /* Standard VS Code active/hover link color */
	text-decoration: underline;
}

/* Tables (table, th, td) */
#chat-container .message table {
	border-collapse: collapse; /* Standard table border model */
	margin: 1em 0; /* Spacing around tables */
	width: auto; /* Let table determine its width based on content, up to 100% */
	max-width: 100%; /* Prevent table from overflowing message width without scroll */
	font-size: 0.95em; /* Slightly smaller text in tables */
	border: 1px solid var(--vscode-editorWidget-border, var(--border-color));
	white-space: normal; /* Ensure content within table cells wraps */
	/* If table itself is too wide, .ai-message overflow-x:auto will handle scrolling */
}
#chat-container .message th,
#chat-container .message td {
	border: 1px solid var(--vscode-editorWidget-border, var(--border-color));
	padding: 0.5em 0.75em; /* Padding within cells */
	text-align: left; /* Align text to the left by default */
	word-wrap: break-word; /* Allow long words in cells to break and wrap */
}
#chat-container .message th {
	background-color: rgba(
		128,
		128,
		128,
		0.07
	); /* Subtle header background for table, theme-agnostic */
	font-weight: 600; /* Bold header text */
	color: inherit; /* Inherit text color */
}
/* Optional: Alternate row striping for better readability in tables */
#chat-container .message tr:nth-child(even) {
	background-color: rgba(
		128,
		128,
		128,
		0.03
	); /* Very subtle striping for even rows */
}

/* --- Status Area --- */
#status-area {
	font-size: 0.9em;
	color: var(--vscode-focusBorder) !important;
	min-height: 1.5em;
	text-align: center;
	padding: 10px 0px 0px 0px; /* Reduced top padding */
	flex-shrink: 0;
	transition: color 0.2s ease-in-out;
}

/* --- Input Area --- */
#input-container {
	display: flex;
	align-items: flex-end; /* Align items to the bottom */
	margin-bottom: var(--element-spacing);
	flex-shrink: 0;
	border: 1px solid var(--border-color);
	border-radius: var(--border-radius);
	background-color: var(--vscode-input-background);
	transition: border-color 0.1s ease-in-out;
	padding: 2px; /* Small padding around */
	gap: var(
		--element-spacing
	); /* Space between input, send, and cancel buttons */
}
#input-container:focus-within {
	border-color: var(--vscode-focusBorder);
	box-shadow: 0 0 0 1px var(--vscode-focusBorder);
}
#chat-input {
	flex-grow: 1;
	background-color: transparent;
	border: none;
	color: var(--vscode-input-foreground);
	padding: 6px 8px; /* Adjusted padding */
	font-family: inherit;
	font-size: inherit;
	resize: none;
	outline: none;
	min-height: calc(var(--input-height));
	max-height: 150px;
	line-height: 1.4;
	/* Remove default margin or padding that might affect flex layout */
	margin: 0;
	padding-top: 6px; /* Re-add specific padding if needed */
	padding-bottom: 6px;
	padding-left: 8px;
	padding-right: 8px;
}
#chat-input::placeholder {
	color: var(--vscode-input-placeholderForeground);
}

/* Style for the send button */
#input-container button#send-button {
	flex-shrink: 0;
	padding: 0; /* Remove internal padding */
	height: var(--input-height);
	width: calc(var(--input-height) + 10px);
	background-color: var(--vscode-button-background);
	color: var(--vscode-button-foreground);
	border: none;
	border-radius: var(--border-radius);
	cursor: pointer;
	transition: background-color 0.1s ease-in-out;
	display: inline-flex; /* Use flexbox for centering icon */
	align-items: center;
	justify-content: center;
	margin: 0; /* Ensure no extra margin */
}
#input-container button#send-button:hover {
	background-color: var(--vscode-button-hoverBackground);
}
#input-container button#send-button:disabled {
	background-color: var(--vscode-button-secondaryBackground);
	color: var(--vscode-button-secondaryForeground);
	opacity: 0.7;
	cursor: not-allowed;
}
#input-container button#send-button .fa-icon {
	/* Send Icon */
	font-size: 1.1em;
}

/* Style for the cancel generation button */
#input-container button#cancel-generation-button {
	flex-shrink: 0;
	display: none; /* Initially hidden */
	padding: 0;
	height: var(--input-height);
	width: calc(var(--input-height) + 10px); /* Match size of send button */
	background-color: var(
		--vscode-button-secondaryBackground
	); /* Secondary style background */
	color: var(
		--vscode-button-secondaryForeground
	); /* Secondary style text color */
	border: 1px solid var(--vscode-button-border, var(--border-color)); /* Add border for secondary style */
	border-radius: var(--border-radius);
	cursor: pointer;
	transition: background-color 0.1s ease-in-out, border-color 0.1s ease-in-out;
	/* When visible, it should be display: inline-flex */
	align-items: center;
	justify-content: center;
	margin: 0; /* Ensure no extra margin */
	/* Will be shown dynamically by JS, typically by setting display: inline-flex; */
}
#input-container button#cancel-generation-button:hover {
	background-color: var(--vscode-button-secondaryHoverBackground);
}
#input-container button#cancel-generation-button:focus {
	border-color: var(--vscode-focusBorder);
	box-shadow: 0 0 0 1px var(--vscode-focusBorder);
}
#input-container button#cancel-generation-button .fa-icon {
	/* Cancel Icon */
	font-size: 1.1em; /* Match size of send icon */
}

/* --- Model/API Key Sections --- */
.section {
	padding: var(--element-spacing) 0; /* Only vertical padding */
	border-top: 1px solid var(--border-color);
	flex-shrink: 0;
	width: 100%;
}
/* Specific spacing for first section below input */
#input-container + .section {
	margin-top: var(--element-spacing);
}

/* Model Select */
.model-select-container {
	display: flex;
	align-items: center;
	gap: var(--element-spacing);
	width: 100%;
}
.model-select-container label {
	/* Optional Label */
	flex-shrink: 0;
	font-size: 0.95em;
	color: var(--vscode-foreground);
}
#model-select {
	flex-grow: 1;
	background-color: var(--vscode-dropdown-background);
	color: var(--vscode-dropdown-foreground);
	border: 1px solid var(--vscode-dropdown-border);
	padding: 4px 8px; /* Adjust padding */
	height: var(--input-height); /* Match height */
	border-radius: var(--border-radius);
	font-family: inherit;
	font-size: inherit;
	width: 100%;
	box-sizing: border-box;
	outline: none;
}
#model-select:focus {
	border-color: var(--vscode-focusBorder);
	box-shadow: 0 0 0 1px var(--vscode-focusBorder);
}
#model-select:disabled {
	opacity: 0.6;
	cursor: not-allowed;
	background-color: var(--vscode-input-background);
}

/* API Key Management */
.key-management-controls {
	display: flex;
	align-items: center;
	justify-content: space-between;
	margin-bottom: var(--element-spacing);
	gap: 5px;
}
.key-management-controls span#current-key-display {
	font-size: 0.9em;
	color: var(--vscode-input-foreground);
	text-align: center;
	flex-grow: 1;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	padding: 0 8px; /* Only horizontal padding */
	background-color: var(--vscode-input-background);
	border-radius: var(--border-radius);
	border: 1px solid var(--border-color);
	height: var(--input-height);
	line-height: var(--input-height); /* Vertically center */
}
.key-management-controls button {
	padding: 0;
	width: var(--icon-button-size);
	height: var(--icon-button-size);
	background-color: var(--vscode-button-secondaryBackground);
	color: var(--vscode-button-secondaryForeground);
	border: 1px solid var(--border-color);
	border-radius: var(--border-radius);
	cursor: pointer;
	transition: background-color 0.1s ease-in-out;
	display: inline-flex;
	align-items: center;
	justify-content: center;
}
.key-management-controls button:hover {
	background-color: var(--vscode-button-secondaryHoverBackground);
}
.key-management-controls button:disabled {
	background-color: var(--vscode-input-background);
	opacity: 0.6;
	cursor: not-allowed;
	border-color: var(--border-color);
}
.key-management-controls button .fa-icon {
	/* Key Icons */
	font-size: 0.9em;
}

.add-key-container {
	display: flex;
	margin-top: var(--element-spacing);
	align-items: stretch;
}
#add-key-input {
	flex-grow: 1;
	margin-right: 5px;
	background-color: var(--vscode-input-background);
	border: 1px solid var(--border-color);
	color: var(--vscode-input-foreground);
	padding: 0 8px;
	border-radius: var(--border-radius);
	height: calc(var(--input-height)); /* Align height */
	outline: none;
	box-sizing: border-box;
}
#add-key-input:focus {
	border-color: var(--vscode-focusBorder);
	box-shadow: 0 0 0 1px var(--vscode-focusBorder);
}
#add-key-button {
	padding: 0;
	height: calc(var(--input-height));
	width: calc(var(--input-height) + 10px);
	background-color: var(--vscode-button-background);
	color: var(--vscode-button-foreground);
	border: none;
	border-radius: var(--border-radius);
	cursor: pointer;
	transition: background-color 0.1s ease-in-out;
	display: inline-flex;
	align-items: center;
	justify-content: center;
}
#add-key-button:hover {
	background-color: var(--vscode-button-hoverBackground);
}
#add-key-button:disabled {
	background-color: var(--vscode-button-secondaryBackground);
	color: var(--vscode-button-secondaryForeground);
	opacity: 0.7;
}
#add-key-button .fa-icon {
	/* Add Key Icon */
	font-size: 1.1em;
}

#api-key-status {
	font-size: 0.9em;
	margin-top: 5px;
	color: var(--vscode-descriptionForeground);
	min-height: 1.5em;
	text-align: center;
	transition: color 0.2s ease-in-out;
}
.api-key-section p small {
	/* Key storage notice */
	font-size: 0.85em;
	color: var(--vscode-descriptionForeground);
	display: block;
	text-align: center;
	margin-top: var(--element-spacing);
}

/* --- Plan Confirmation Container --- */
/* Styles for the container that appears when a plan is generated and needs confirmation. */
#plan-confirmation-container {
	border: 1px solid
		var(--vscode-inputOption-activeBorder, var(--vscode-focusBorder)); /* Border color from theme */
	background-color: var(
		--vscode-inputOption-activeBackground
	); /* Background color from theme */
	padding: var(--container-padding);
	margin: var(--element-spacing) 0; /* Spacing above and below the container */
	text-align: center; /* Center align text and inline children like buttons */
	border-radius: var(--border-radius);
	flex-shrink: 0; /* Prevent container from shrinking in flex layouts */
	display: flex; /* Use flexbox for centering content */
	flex-direction: column; /* Stack children vertically */
	align-items: center; /* Center children horizontally */
	gap: 5px; /* Space between header, text, and buttons */
}
/* Styles for the text message within the confirmation container. */
#plan-confirmation-container p {
	margin-top: 0; /* Remove top margin if it's the first element */
	margin-bottom: var(--element-spacing); /* Spacing below the text */
	color: var(
		--vscode-inputOption-activeForeground
	); /* Text color from theme, contrasts with background */
	font-weight: 500; /* Slightly bolder text */
	text-align: center; /* Ensure text is centered */
}
/* Wrapper for confirmation buttons to apply gap */
#plan-confirmation-container .button-group {
	display: flex; /* Use flexbox for button alignment */
	gap: 10px; /* Space between confirm and cancel buttons */
	justify-content: center; /* Center the button group */
}
/* General styles for all buttons within the confirmation container. */
#plan-confirmation-container button {
	margin: 0; /* Remove default margin as gap is handled by wrapper */
	padding: 5px 12px; /* Padding inside buttons */
	height: var(--input-height); /* Consistent height */
	width: 100%;
	background-color: var(
		--vscode-button-background
	); /* Default primary button background */
	color: var(
		--vscode-button-foreground
	); /* Default primary button text color */
	border: 1px solid var(--vscode-button-border, transparent); /* Standard button border (can be transparent) */
	border-radius: var(--border-radius);
	cursor: pointer;
	transition: background-color 0.1s ease-in-out, border-color 0.1s ease-in-out; /* Smooth transitions */
	display: inline-flex; /* Use flexbox for content alignment (especially icons) */
	align-items: center; /* Vertically align icon/text */
	justify-content: center;
	font-size: inherit; /* Inherit font size from parent */
	outline: none; /* Remove default outline */
}
/* Hover state for primary/confirm button */
#plan-confirmation-container button:hover {
	background-color: var(--vscode-button-hoverBackground);
}
/* Focus state for all buttons in this container, providing visual feedback */
#plan-confirmation-container button:focus {
	border-color: var(--vscode-focusBorder); /* Use focus border color */
	box-shadow: 0 0 0 1px var(--vscode-focusBorder); /* Add an outline shadow */
}

/* Specific styles for the cancel button within the confirmation container (Secondary Appearance - Step 1) */
#plan-confirmation-container button#cancel-plan-button {
	background-color: var(
		--vscode-button-secondaryBackground
	); /* Use secondary background color */
	color: var(
		--vscode-button-secondaryForeground
	); /* Use secondary text color */
	/* Border is inherited from the general button style, which is appropriate. */
}
/* Hover state for the cancel button (Step 3) */
#plan-confirmation-container button#cancel-plan-button:hover {
	background-color: var(
		--vscode-button-secondaryHoverBackground
	); /* Use secondary hover background color */
}
/* Focus state for cancel button is handled by the general `#plan-confirmation-container button:focus` rule above. */

/* Styling for Font Awesome icons within any button in this container */
#plan-confirmation-container button .fa-icon {
	margin-right: 6px; /* Spacing between icon and text */
	font-size: 0.9em; /* Icon size relative to button font size */
	/* Alignment is handled by parent button's flex properties and global .fa-icon styles. */
	/* Visibility is ensured by color inherited from button. */
}

/* --- Plan Parse Error Display --- */
/* Styles for the container that shows up when plan parsing fails. */
#plan-parse-error-container {
	/* Styled similar to #plan-confirmation-container for visual consistency in UI sections. */
	/* MODIFIED: Use error colors instead of active/focus colors for better visual distinction */
	border: 1px solid var(--vscode-inputValidation-errorBorder); /* Border color from theme */
	background-color: var(
		--vscode-inputValidation-errorBackground
	); /* Background color from theme */
	padding: var(--container-padding);
	margin: var(--element-spacing) 0;
	text-align: center; /* Center align contents (like buttons) */
	border-radius: var(--border-radius);
	flex-shrink: 0; /* Prevent container from shrinking in flex layouts */
}

/* Styles for the header within the error container */
#plan-parse-error-container h3 {
	color: var(--vscode-errorForeground); /* Red color for error header */
	font-size: 1.1em;
	margin-top: 0;
	margin-bottom: var(--element-spacing);
	border-bottom: none; /* Remove border */
}

/* Styles for the actual error message text within the parse error container. */
#plan-parse-error-display {
	color: var(
		--vscode-errorForeground
	); /* Standard VS Code error text color for high visibility. */
	font-weight: 500; /* Slightly bolder text for emphasis. */
	margin-bottom: var(--element-spacing); /* Spacing below the error message. */
	text-align: left; /* Left-align text for better readability of potentially multi-line error messages. */
	white-space: pre-wrap; /* Allow wrapping of long error messages while preserving line breaks. */
}

/* Styles for the parent <pre> element that wraps the <code id="failed-json-display">. */
/* This rule targets the <pre> tag when it has a direct child <code> with id "failed-json-display". */
pre:has(> code#failed-json-display) {
	max-height: 200px; /* Limit the height to prevent the block from becoming too large. */
	overflow-y: auto; /* Add a vertical scrollbar if the JSON content exceeds max-height. */
	overflow-x: auto; /* Add a horizontal scrollbar if the JSON content exceeds available width. */
	background-color: var(
		--vscode-textCodeBlock-background,
		rgba(0, 0, 0, 0.1)
	); /* Use standard code block background. */
	border: 1px solid var(--vscode-editorWidget-border, var(--border-color)); /* Standard border for code blocks. */
	border-radius: var(--border-radius);
	padding: 10px; /* Padding inside the <pre> block. */
	margin-top: var(--element-spacing); /* Space above this block. */
	margin-bottom: var(--element-spacing); /* Space below this block. */
	text-align: left; /* Ensure JSON content is left-aligned. */
	/* Text-specific styles like font-family and white-space (for the pre itself) are generally handled by browser defaults for <pre> or inherited. */
}

/* Styles for the <code id="failed-json-display"> element itself. */
/* This rule targets the <code> tag with the id "failed-json-display". */
code#failed-json-display {
	display: block; /* Ensure the code block fills the parent <pre> for proper layout of its content. */
	font-family: var(
		--vscode-editor-font-family,
		"Courier New",
		Courier,
		monospace
	); /* Monospace font for code. */
	font-size: 0.9em; /* Slightly smaller font size for code. */
	color: var(--vscode-editor-foreground); /* Standard editor text color. */
	white-space: pre-wrap; /* Wrap lines within the code block for readability, but preserve spaces and line breaks. */
	overflow-wrap: break-word; /* Break long strings/words to prevent horizontal overflow and fit within the pre. */

	/* Explicitly reset/remove block-level styles that are now handled by the parent <pre> element. */
	padding: 0;
	background: none;
	border: none;
	margin: 0;
	max-height: none; /* The code element itself should not have a max-height. */
	overflow: visible; /* Let the parent <pre> handle scrolling. */
}

/* --- Plan Parse Error Action Buttons --- */
/* Wrapper for the buttons when a plan parse error occurs */
#plan-parse-error-buttons-wrapper {
	display: flex;
	justify-content: center; /* Center the button group horizontally */
	gap: 10px; /* Space between buttons */
	margin-top: var(--element-spacing); /* Space above the button group */
}

/* General styles for buttons within the error buttons wrapper */
#plan-parse-error-buttons-wrapper button {
	padding: 0; /* No internal padding, size is controlled by width/height */
	width: var(--icon-button-size); /* Fixed size for square buttons */
	height: var(--icon-button-size); /* Fixed size for square buttons */
	border-radius: var(--border-radius);
	cursor: pointer;
	transition: background-color 0.1s ease-in-out, border-color 0.1s ease-in-out; /* Smooth transitions */
	display: inline-flex; /* Use flexbox for content alignment (especially icons) */
	align-items: center; /* Vertically align icon */
	justify-content: center; /* Center icon horizontally */
	font-size: inherit; /* Inherit font size */
	outline: none; /* Remove default outline */
}

/* Styles for #retry-generation-button within the wrapper (Primary button appearance) */
#plan-parse-error-buttons-wrapper #retry-generation-button {
	background-color: var(
		--vscode-button-background
	); /* Primary background color */
	color: var(--vscode-button-foreground); /* Primary text color */
	border: 1px solid var(--vscode-button-border, transparent); /* Standard primary button border */
}
/* Hover state for the retry button */
#plan-parse-error-buttons-wrapper #retry-generation-button:hover {
	background-color: var(
		--vscode-button-hoverBackground
	); /* Primary hover background */
}

/* Styles for the #cancel-parse-error-button (Secondary appearance - Step 2) */
#plan-parse-error-buttons-wrapper #cancel-parse-error-button {
	background-color: var(
		--vscode-button-secondaryBackground
	); /* Secondary background color */
	color: var(--vscode-button-secondaryForeground); /* Secondary text color */
	border: 1px solid var(--vscode-button-border, var(--border-color)); /* Add a border for better distinction */
}
/* Hover state for the cancel button (Step 3) */
#plan-parse-error-buttons-wrapper #cancel-parse-error-button:hover {
	background-color: var(
		--vscode-button-secondaryHoverBackground
	); /* Secondary hover background color */
}

/* Focus style for both buttons in the wrapper (Step 3) */
#plan-parse-error-buttons-wrapper button:focus {
	border-color: var(--vscode-focusBorder); /* Highlight border on focus */
	box-shadow: 0 0 0 1px var(--vscode-focusBorder); /* Add an outline shadow */
}

/* Style for icons within these buttons */
#plan-parse-error-buttons-wrapper button .fa-icon {
	font-size: 1em; /* Icon size relative to button font size */
}

/* --- Scrollbar Styling --- */
/* Styles for the scrollbar itself */
::-webkit-scrollbar {
	width: 6px; /* Width for vertical scrollbars */
	height: 6px; /* Height for horizontal scrollbars */
}
/* Styles for the scrollbar track (the area the thumb moves in) */
::-webkit-scrollbar-track {
	background: transparent; /* Make track transparent */
}
/* Styles for the scrollbar thumb (the movable handle) */
::-webkit-scrollbar-thumb {
	background: var(
		--vscode-scrollbarSlider-background
	); /* Background color from theme */
	border-radius: 3px; /* Rounded corners */
	border: none; /* No border */
}
/* Hover state for the scrollbar thumb */
::-webkit-scrollbar-thumb:hover {
	background: var(
		--vscode-scrollbarSlider-hoverBackground
	); /* Hover background color from theme */
}
/* Active state for the scrollbar thumb (when being dragged) */
::-webkit-scrollbar-thumb:active {
	background: var(
		--vscode-scrollbarSlider-activeBackground
	); /* Active background color from theme */
}

/* --- FontAwesome Icon Base --- */
/* Base styles for FontAwesome icons */
.fa-icon {
	display: inline-block; /* Allows setting width/height and alignment */
	width: 1em; /* Ensure consistent width based on parent font size */
	height: 1em; /* Ensure consistent height based on parent font size */
	vertical-align: -0.125em; /* Adjust alignment slightly to center with text */
}

/* --- Loading Indicator Styles --- */
/* Style for the text part of the loading indicator */
.loading-text {
	display: inline-block; /* Ensures the text "Thinking" and dots are on the same line if used together */
	font-style: italic; /* Matches style of system-message */
	color: var(
		--vscode-descriptionForeground
	); /* Matches color of system-message */
}

/* Style for each individual dot in the loading indicator */
.loading-text .dot {
	animation: blink 1.4s infinite both; /* Apply blink animation */
	display: inline-block; /* Ensure dots are on the same line */
}

/* Animation delay for each dot to create a sequential blinking effect */
.loading-text .dot:nth-child(1) {
	animation-delay: 0s;
}

.loading-text .dot:nth-child(2) {
	animation-delay: 0.2s;
}

.loading-text .dot:nth-child(3) {
	animation-delay: 0.4s;
}

/* Keyframes for the blinking animation */
@keyframes blink {
	0%,
	80%,
	100% {
		opacity: 0;
	} /* Dot is invisible at the start, for a period, and at the end of the cycle */
	40% {
		opacity: 1;
	} /* Dot is visible in the middle of the cycle */
}

/* --- Beta Text Styling --- */
.beta-text {
	position: absolute;
	top: 5px;
	font-size: small;
	left: 50%;
	transform: translate(-50%, -50%);
	white-space: nowrap;
	font-family: monospace;
	font-weight: 600;
	color: (--vscode-textCodeBlock-background);
}
